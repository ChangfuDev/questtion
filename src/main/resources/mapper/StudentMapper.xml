<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.dlnu.question.dao.StudentMapper" >
  <resultMap id="BaseResultMap" type="cn.edu.dlnu.question.entity.Student" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="grade" property="grade" jdbcType="VARCHAR" />
    <result column="total_grade" property="totalGrade" jdbcType="DOUBLE" />
    <result column="c_id" property="cId" jdbcType="INTEGER" />
    <result column="updated" property="updated" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="list" type="cn.edu.dlnu.question.vo.StudentVO" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="grade" property="grade" jdbcType="VARCHAR" />
    <result column="total_grade" property="totalGrade" jdbcType="DOUBLE" />
    <result column="c_id" property="cId" jdbcType="INTEGER" />
    <result column="updated" property="updated" jdbcType="TIMESTAMP" />
    <result column="city" property="city" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, grade, total_grade, c_id, updated
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.edu.dlnu.question.entity.StudentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_student
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tb_student
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_student
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.edu.dlnu.question.entity.StudentExample" >
    delete from tb_student
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.dlnu.question.entity.Student" >
    insert into tb_student (id, name, grade, 
      total_grade, c_id, updated
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{grade,jdbcType=VARCHAR}, 
      #{totalGrade,jdbcType=DOUBLE}, #{cId,jdbcType=INTEGER}, #{updated,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.dlnu.question.entity.Student" useGeneratedKeys="true" keyProperty="id" >
    insert into tb_student
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="grade != null" >
        grade,
      </if>
      <if test="totalGrade != null" >
        total_grade,
      </if>
      <if test="cId != null" >
        c_id,
      </if>
      <if test="updated != null" >
        updated,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="grade != null" >
        #{grade,jdbcType=VARCHAR},
      </if>
      <if test="totalGrade != null" >
        #{totalGrade,jdbcType=DOUBLE},
      </if>
      <if test="cId != null" >
        #{cId,jdbcType=INTEGER},
      </if>
      <if test="updated != null" >
        #{updated,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.dlnu.question.entity.StudentExample" resultType="java.lang.Integer" >
    select count(*) from tb_student
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tb_student
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.grade != null" >
        grade = #{record.grade,jdbcType=VARCHAR},
      </if>
      <if test="record.totalGrade != null" >
        total_grade = #{record.totalGrade,jdbcType=DOUBLE},
      </if>
      <if test="record.cId != null" >
        c_id = #{record.cId,jdbcType=INTEGER},
      </if>
      <if test="record.updated != null" >
        updated = #{record.updated,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tb_student
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      grade = #{record.grade,jdbcType=VARCHAR},
      total_grade = #{record.totalGrade,jdbcType=DOUBLE},
      c_id = #{record.cId,jdbcType=INTEGER},
      updated = #{record.updated,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.dlnu.question.entity.Student" >
    update tb_student
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="grade != null" >
        grade = #{grade,jdbcType=VARCHAR},
      </if>
      <if test="totalGrade != null" >
        total_grade = #{totalGrade,jdbcType=DOUBLE},
      </if>
      <if test="cId != null" >
        c_id = #{cId,jdbcType=INTEGER},
      </if>
      <if test="updated != null" >
        updated = #{updated,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.dlnu.question.entity.Student" >
    update tb_student
    set name = #{name,jdbcType=VARCHAR},
      grade = #{grade,jdbcType=VARCHAR},
      total_grade = #{totalGrade,jdbcType=DOUBLE},
      c_id = #{cId,jdbcType=INTEGER},
      updated = #{updated,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="getByName" resultType="java.lang.Integer">
    select count(id) from tb_student where c_id = (select c_id from tb_student where name = #{name} ) and total_grade >= (select total_grade from tb_student where name = #{name})
  </select>
  
  <select id="list" resultMap="list">

    select s.id id,s.name name,s.grade grade,s.total_grade total_grade,s.updated updated,c.name city,c.type type from tb_student s left join tb_city c on s.c_id = c.id order by s.total_grade desc

  </select>
</mapper>